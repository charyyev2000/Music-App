{"version":3,"sources":["components/librarySong.js","components/Library.js","components/Nav.js","components/Player.js","components/Song.js","util.js","App.js","reportWebVitals.js","index.js"],"names":["LibrarySong","song","songs","setCurrentSong","id","audioRef","isPlaying","setSongs","onClick","selectedSong","filter","state","current","play","newSongs","map","active","playPromise","undefined","then","audio","className","alt","name","src","cover","artist","Library","library","Nav","setLibrary","icon","faMusic","Player","currentSong","setIsPlaying","songInfo","setSongInfo","timeUpdateHandler","getTime","time","Math","floor","slice","currentTime","min","max","duration","value","type","onChange","e","target","size","faAngleLeft","pause","faPlay","faPause","faAngleRight","onTimeUpdate","onLoadedMetadata","ref","Song","chillHop","uuidv4","color","App","useRef","useState","data","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77d44b54.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst LibrarySong = ({\r\n  song,\r\n  songs,\r\n  setCurrentSong,\r\n  id,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs\r\n}) => {\r\n  const songSelectHandler = () => {\r\n    const selectedSong = songs.filter((state) => state.id === id);\r\n    setCurrentSong(selectedSong[0]);\r\n    audioRef.current.play();\r\n    // add active state\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === id) {\r\n        return {\r\n          ...song,\r\n          active: true\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n    // check if the song is playing\r\n    if (isPlaying) {\r\n      const playPromise = audioRef.current.play();\r\n      if (playPromise !== undefined) {\r\n        playPromise.then((audio) => {\r\n          audioRef.current.play();\r\n        });\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      onClick={songSelectHandler}\r\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\r\n    >\r\n      <img alt={song.name} src={song.cover} />\r\n      <div className=\"song-description\">\r\n        <h3>{song.name}</h3>\r\n        <h4>{song.artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibrarySong;\r\n","import React from \"react\";\r\nimport LibrarySong from \"./librarySong\";\r\n\r\nconst Library = ({\r\n  songs,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n  library\r\n}) => {\r\n  return (\r\n    <div className={`library ${library ? \"activeLibrary\" : \"\"}`}>\r\n      <h2>Library</h2>\r\n      <div className=\"library-songs\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            songs={songs}\r\n            setCurrentSong={setCurrentSong}\r\n            song={song}\r\n            id={song.id}\r\n            key={song.id}\r\n            audioRef={audioRef}\r\n            isPlaying={isPlaying}\r\n            setSongs={setSongs}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav = ({ setLibrary, library }) => {\r\n  return (\r\n    <nav>\r\n      <h1>Waves</h1>\r\n      <button onClick={() => setLibrary(!library)}>\r\n        Library\r\n        <FontAwesomeIcon icon={faMusic} />\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPause\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Player = ({\r\n  currentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  audioRef,\r\n  songInfo,\r\n  setSongInfo,\r\n  timeUpdateHandler\r\n}) => {\r\n  // event handlers\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n  // time state\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <input\r\n          min={0}\r\n          max={songInfo.duration || 0}\r\n          value={songInfo.currentTime}\r\n          type=\"range\"\r\n          onChange={dragHandler}\r\n        />\r\n        <p>{getTime(songInfo.duration)}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon className=\"skip-back\" size=\"2x\" icon={faAngleLeft} />\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          className=\"play\"\r\n          size=\"2x\"\r\n          icon={isPlaying ? faPlay : faPause}\r\n        />\r\n        <FontAwesomeIcon\r\n          className=\"skip-forward\"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n        />\r\n      </div>\r\n      <audio\r\n        onTimeUpdate={timeUpdateHandler}\r\n        onLoadedMetadata={timeUpdateHandler}\r\n        ref={audioRef}\r\n        src={currentSong.audio}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React from \"react\";\r\n\r\nconst Song = ({ currentSong }) => {\r\n  return (\r\n    <div className=\"song-container\">\r\n      <img alt={currentSong.name} src={currentSong.cover} />\r\n      <h2>{currentSong.name}</h2>\r\n      <h3>{currentSong.artist}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n","import { v4 as uuidv4 } from \"uuid\";\n\nfunction chillHop() {\n  return [\n    {\n      name: \"Conflicted\",\n      artist: \"Hanz\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2021/08/b0bb2309d0c8fe0a32907ecddab689501b7de5cf-1024x1024.jpg\",\n      id: uuidv4(),\n      active: true,\n      color: [\"#40556f\", \"#9d7e8e\"],\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=24642\"\n    },\n    {\n      name: \"Falling Short\",\n      artist: \"Hanz\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2021/08/b0bb2309d0c8fe0a32907ecddab689501b7de5cf-1024x1024.jpg\",\n      id: uuidv4(),\n      active: false,\n      color: [\"#40556f\", \"#9d7e8e\"],\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=24643\"\n    },\n    {\n      name: \"From Afar\",\n      artist: \"Hanz\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2021/08/b0bb2309d0c8fe0a32907ecddab689501b7de5cf-1024x1024.jpg\",\n      id: uuidv4(),\n      active: false,\n      color: [\"#40556f\", \"#9d7e8e\"],\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=24644\"\n    },\n    {\n      name: \"Out of Place\",\n      artist: \"Hanz\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2021/08/b0bb2309d0c8fe0a32907ecddab689501b7de5cf-1024x1024.jpg\",\n      id: uuidv4(),\n      active: false,\n      color: [\"#40556f\", \"#9d7e8e\"],\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=24645\"\n    },\n    {\n      name: \"Rolling Eyes\",\n      artist: \"Hanz\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2021/08/b0bb2309d0c8fe0a32907ecddab689501b7de5cf-1024x1024.jpg\",\n      id: uuidv4(),\n      active: false,\n      color: [\"#40556f\", \"#9d7e8e\"],\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=24646\"\n    }\n  ];\n}\n\nexport default chillHop;\n","import { useRef, useState } from \"react\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport \"./styles/app.scss\";\n\n// import util\nimport data from \"./util\";\n\nfunction App() {\n  // ref\n  const audioRef = useRef(null);\n\n  // state\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0\n  });\n  const [library, setLibrary] = useState(false);\n  // time update\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    setSongInfo({ ...songInfo, currentTime: current, duration: duration });\n  };\n  return (\n    <div className=\"App\">\n      <Nav library={library} setLibrary={setLibrary} />\n      <Song currentSong={currentSong} />\n      <Player\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong}\n        audioRef={audioRef}\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n        timeUpdateHandler={timeUpdateHandler}\n      />\n      <Library\n        library={library}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}